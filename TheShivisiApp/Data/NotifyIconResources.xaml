<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TheShivisiApp"
										xmlns:vm="clr-namespace:TheShivisiApp.ViewModels"
                    xmlns:tb="http://www.hardcodet.net/taskbar">

	<!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
	<!-- The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon) -->
	<ContextMenu x:Shared="false" x:Key="SysTrayMenu">
		<MenuItem Header="Open Settings" Command="{Binding ShowWindowCommand}" />
		<!--<MenuItem Header="Close Settings" Command="{Binding HideWindowCommand}" />-->
		<Separator />
		<MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
	</ContextMenu>


	<!-- The application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
	<tb:TaskbarIcon x:Key="NotifyIcon"
                  IconSource="/Data/SNI"
                  ToolTipText="The Shivisi App"
									LeftClickCommand="{Binding ShowWindowCommand}"
                  ContextMenu="{StaticResource SysTrayMenu}">

		<!-- self-assign a data context (could also be done programmatically) -->
		<tb:TaskbarIcon.DataContext>
			<vm:NotifyIconViewModel />
		</tb:TaskbarIcon.DataContext>
	</tb:TaskbarIcon>
</ResourceDictionary>